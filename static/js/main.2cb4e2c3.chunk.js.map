{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","context/FoodContext.js","components/ButtonBay/ButtonBay.js","components/RecipeBay/RecipeBay.js","components/Recepie/Recepie.js","components/MainContent/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Component","Footer","target","rel","FoodContext","createContext","FoodProvider","children","useState","category","setCategory","recepie","setRecepie","Provider","value","ButtonBay","categories","setCategories","useContext","a","fetch","categoriesAPI","json","categoriesJson","console","log","meals","clearActive","current","document","getElementsByClassName","length","replace","useEffect","fetchCategories","id","type","defaultChecked","map","key","strCategory","onClick","pressedCategory","Buttons","getElementById","checked","i","buttonClicked","RecipeBay","recepies","setRecepies","recepiesAPI","recepiesJson","fetchRecepies","idMeal","recepieID","src","strMealThumb","alt","strMeal","Recepie","recepieData","setRecepieData","showRecepie","setShowRecepie","ingredients","setIngredients","measures","setMeasures","recepieAPI","recepieJson","oldArray","fetchRecepie","index","strInstructions","MainContent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2cb4e2c3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Header.css\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"headerContainer\">\r\n        <div className=\"logo\">\r\n          <a href=\"index.html\">\r\n            <h1>Consequat</h1>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nexport class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"FooterContainer\">\r\n        <div className=\"FooterContent\">Made by Carlos Louro.</div>\r\n        <div className=\"FooterContent\">\r\n          API courtesy by\r\n          <a\r\n            href=\"https://www.themealdb.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            www.themealdb.com/\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const FoodContext = createContext();\r\n\r\nexport const FoodProvider = ({ children }) => {\r\n  const [category, setCategory] = useState(\"None\");\r\n  const [recepie, setRecepie] = useState(\"None\");\r\n\r\n  return (\r\n    <FoodContext.Provider value={[category, setCategory, recepie, setRecepie]}>\r\n      {children}\r\n    </FoodContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { FoodContext } from \"../../context/FoodContext\";\r\nimport \"./ButtonBay.css\";\r\n\r\nconst ButtonBay = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [category, setCategory] = useContext(FoodContext);\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  async function fetchCategories() {\r\n    const categoriesAPI = await fetch(\r\n      \"https://www.themealdb.com/api/json/v1/1/list.php?c=list\"\r\n    );\r\n    const categoriesJson = await categoriesAPI.json();\r\n    console.log(categoriesJson);\r\n    setCategories(categoriesJson.meals);\r\n  }\r\n\r\n  function buttonClicked(pressedCategory) {\r\n    setCategory(pressedCategory);\r\n    var Buttons = document.getElementsByClassName(\"categorieButton\");\r\n    document.getElementById(\"checkbox\").checked = false;\r\n    for (var i = 0; i < Buttons.length; i++) {\r\n      if (Buttons[i].id === pressedCategory) {\r\n        clearActive();\r\n        Buttons[i].className += \" activeBtn\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function clearActive() {\r\n    var current = document.getElementsByClassName(\"activeBtn\");\r\n    if (current.length > 0) {\r\n      current[0].className = current[0].className.replace(\" activeBtn\", \"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"menuToggle\">\r\n      <input id=\"checkbox\" type=\"checkbox\" defaultChecked />\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      <div className=\"buttonGrid\">\r\n        {categories.map((categories) => (\r\n          <button\r\n            key={categories.strCategory}\r\n            id={categories.strCategory}\r\n            className=\"categorieButton\"\r\n            onClick={() => buttonClicked(categories.strCategory)}\r\n          >\r\n            {categories.strCategory}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonBay;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { FoodContext } from \"../../context/FoodContext\";\r\n\r\nimport \"./RecipeBay.css\";\r\n\r\nfunction RecipeBay() {\r\n  const [category, setCategory, recepie, setRecepie] = useContext(FoodContext);\r\n  const [recepies, setRecepies] = useState([]);\r\n  useEffect(() => {\r\n    if (category !== \"None\") {\r\n      fetchRecepies();\r\n    }\r\n  }, [category]);\r\n\r\n  async function fetchRecepies() {\r\n    const recepiesAPI = await fetch(\r\n      \"https://www.themealdb.com/api/json/v1/1/filter.php?c=\" + category\r\n    );\r\n    const recepiesJson = await recepiesAPI.json();\r\n    console.log(recepiesJson);\r\n    setRecepies(recepiesJson.meals);\r\n  }\r\n\r\n  function prepareRecepie(recepieID) {\r\n    console.log(recepieID);\r\n    setRecepie(recepieID);\r\n  }\r\n\r\n  return (\r\n    <div className=\"RecepieCardContainer\">\r\n      {recepies.map((recepies) => (\r\n        <div\r\n          className=\"recepieCard\"\r\n          key={recepies.idMeal}\r\n          onClick={() => prepareRecepie(recepies.idMeal)}\r\n        >\r\n          <img\r\n            className=\"recepieImg\"\r\n            src={recepies.strMealThumb}\r\n            alt={recepies.strMeal}\r\n          />\r\n          <h3 className=\"recepieTitle\">{recepies.strMeal}</h3>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeBay;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { FoodContext } from \"../../context/FoodContext\";\r\nimport \"./recepie.css\";\r\n\r\nfunction Recepie() {\r\n  const [category, setCategory, recepie, setRecepie] = useContext(FoodContext);\r\n  const [recepieData, setRecepieData] = useState();\r\n  const [showRecepie, setShowRecepie] = useState(false);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [measures, setMeasures] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (recepie !== \"None\") {\r\n      fetchRecepie();\r\n    }\r\n  }, [recepie]);\r\n\r\n  async function fetchRecepie() {\r\n    const recepieAPI = await fetch(\r\n      \"https://www.themealdb.com/api/json/v1/1/lookup.php?i=\" + recepie\r\n    );\r\n    const recepieJson = await recepieAPI.json();\r\n\r\n    for (let i = 1; i < 21; i++) {\r\n      if (\r\n        !recepieJson.meals[0][\"strIngredient\" + i] == \"\" ||\r\n        !recepieJson.meals[0][\"strIngredient\" + i] == null\r\n      ) {\r\n        setIngredients((oldArray) => [\r\n          ...oldArray,\r\n          recepieJson.meals[0][\"strIngredient\" + i],\r\n        ]);\r\n        setMeasures((oldArray) => [\r\n          ...oldArray,\r\n          recepieJson.meals[0][\"strMeasure\" + i],\r\n        ]);\r\n      }\r\n    }\r\n    console.log(recepieJson);\r\n    setRecepieData(recepieJson);\r\n    setShowRecepie(true);\r\n    setRecepie(\"None\");\r\n  }\r\n\r\n  function resetPage() {\r\n    setShowRecepie(false);\r\n    setIngredients([]);\r\n    setMeasures([]);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {(() => {\r\n          if (showRecepie) {\r\n            return (\r\n              <div className=\"recepieFieldCardContainer\">\r\n                <div className=\"recepieFieldCard\">\r\n                  <h2 className=\"recepieName\">\r\n                    {recepieData.meals[0].strMeal}\r\n                  </h2>\r\n                  <div className=\"imgIngContainer\">\r\n                    <img\r\n                      className=\"recepiePic\"\r\n                      src={recepieData.meals[0].strMealThumb}\r\n                      alt={recepieData.meals[0].strMeal}\r\n                    />\r\n                    <ul>\r\n                      <h4 className=\"ingredientsTitle\">Ingredients:</h4>\r\n                      {ingredients.map((ingredients, index) => (\r\n                        <li key={index}>\r\n                          {ingredients} - {measures[index]}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <h4 className=\"instructionsTitle\">Instructions:</h4>\r\n                  <p className=\"recepieInstructions\">\r\n                    {recepieData.meals[0].strInstructions}\r\n                  </p>\r\n                  <button\r\n                    className=\"CloseBtn\"\r\n                    onClick={() => {\r\n                      resetPage();\r\n                    }}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            return <div></div>;\r\n          }\r\n        })()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recepie;\r\n","import React, { Component } from \"react\";\r\nimport ButtonBay from \"../ButtonBay/ButtonBay\";\r\nimport RecipeBay from \"../RecipeBay/RecipeBay\";\r\nimport Recepie from \"../Recepie/Recepie\";\r\nimport { FoodProvider } from \"../../context/FoodContext\";\r\n\r\nimport \"./MainContent.css\";\r\n\r\nclass MainContent extends Component {\r\n  render() {\r\n    return (\r\n      <FoodProvider>\r\n        <div>\r\n          <Recepie />\r\n        </div>\r\n        <div className=\"mainContentContainer\">\r\n          <div className=\"buttonBay\">\r\n            <ButtonBay />\r\n          </div>\r\n          <div className=\"recipeBay\"></div>\r\n          <RecipeBay />\r\n        </div>\r\n      </FoodProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContent;\r\n","import React, { Component } from \"react\";\nimport \"./app.css\";\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport MainContent from \"./components/MainContent/MainContent\";\nimport { FoodContext } from \"./context/FoodContext\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"mainContainer\">\n        <div className=\"Header\">\n          <Header />\n        </div>\n        <FoodContext.Provider>\n          <div className=\"mainContent\">\n            <MainContent />\n          </div>\n        </FoodContext.Provider>\n        <div className=\"Footer\">\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}